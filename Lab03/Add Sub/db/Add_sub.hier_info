|Add_sub
sw[0] => ff_asyncrst_sign8bit:reg02.D[0]
sw[1] => ff_asyncrst_sign8bit:reg02.D[1]
sw[2] => ff_asyncrst_sign8bit:reg02.D[2]
sw[3] => ff_asyncrst_sign8bit:reg02.D[3]
sw[4] => ff_asyncrst_sign8bit:reg02.D[4]
sw[5] => ff_asyncrst_sign8bit:reg02.D[5]
sw[6] => ff_asyncrst_sign8bit:reg02.D[6]
sw[7] => ff_asyncrst_sign8bit:reg02.D[7]
sw[8] => ff_asyncrst_sign8bit:reg01.D[0]
sw[9] => ff_asyncrst_sign8bit:reg01.D[1]
sw[10] => ff_asyncrst_sign8bit:reg01.D[2]
sw[11] => ff_asyncrst_sign8bit:reg01.D[3]
sw[12] => ff_asyncrst_sign8bit:reg01.D[4]
sw[13] => ff_asyncrst_sign8bit:reg01.D[5]
sw[14] => ff_asyncrst_sign8bit:reg01.D[6]
sw[15] => ff_asyncrst_sign8bit:reg01.D[7]
sw[16] => full_adder_8bit:adder.sum_subn
key[0] => ff_asyncrst_sign8bit:reg01.Resetn
key[0] => ff_asyncrst_sign8bit:reg02.Resetn
key[0] => ff_asyncrst_sign8bit:reg03.Resetn
key[0] => ff_asyncrst_sign1bit:reg04.Resetn
key[1] => ff_asyncrst_sign8bit:reg01.Clk
key[1] => ff_asyncrst_sign8bit:reg02.Clk
key[1] => ff_asyncrst_sign8bit:reg03.Clk
key[1] => ff_asyncrst_sign1bit:reg04.Clk
ledr[0] <= ff_asyncrst_sign8bit:reg03.Q[0]
ledr[1] <= ff_asyncrst_sign8bit:reg03.Q[1]
ledr[2] <= ff_asyncrst_sign8bit:reg03.Q[2]
ledr[3] <= ff_asyncrst_sign8bit:reg03.Q[3]
ledr[4] <= ff_asyncrst_sign8bit:reg03.Q[4]
ledr[5] <= ff_asyncrst_sign8bit:reg03.Q[5]
ledr[6] <= ff_asyncrst_sign8bit:reg03.Q[6]
ledr[7] <= ff_asyncrst_sign8bit:reg03.Q[7]
ledg[0] <= <GND>
ledg[1] <= <GND>
ledg[2] <= <GND>
ledg[3] <= <GND>
ledg[4] <= <GND>
ledg[5] <= <GND>
ledg[6] <= <GND>
ledg[7] <= <GND>
ledg[8] <= ff_asyncrst_sign1bit:reg04.Q
hex7[6] <= decoder_7seg:disp7.hex[6]
hex7[5] <= decoder_7seg:disp7.hex[5]
hex7[4] <= decoder_7seg:disp7.hex[4]
hex7[3] <= decoder_7seg:disp7.hex[3]
hex7[2] <= decoder_7seg:disp7.hex[2]
hex7[1] <= decoder_7seg:disp7.hex[1]
hex7[0] <= decoder_7seg:disp7.hex[0]
hex6[6] <= decoder_7seg:disp6.hex[6]
hex6[5] <= decoder_7seg:disp6.hex[5]
hex6[4] <= decoder_7seg:disp6.hex[4]
hex6[3] <= decoder_7seg:disp6.hex[3]
hex6[2] <= decoder_7seg:disp6.hex[2]
hex6[1] <= decoder_7seg:disp6.hex[1]
hex6[0] <= decoder_7seg:disp6.hex[0]
hex5[6] <= decoder_7seg:disp5.hex[6]
hex5[5] <= decoder_7seg:disp5.hex[5]
hex5[4] <= decoder_7seg:disp5.hex[4]
hex5[3] <= decoder_7seg:disp5.hex[3]
hex5[2] <= decoder_7seg:disp5.hex[2]
hex5[1] <= decoder_7seg:disp5.hex[1]
hex5[0] <= decoder_7seg:disp5.hex[0]
hex4[6] <= decoder_7seg:disp4.hex[6]
hex4[5] <= decoder_7seg:disp4.hex[5]
hex4[4] <= decoder_7seg:disp4.hex[4]
hex4[3] <= decoder_7seg:disp4.hex[3]
hex4[2] <= decoder_7seg:disp4.hex[2]
hex4[1] <= decoder_7seg:disp4.hex[1]
hex4[0] <= decoder_7seg:disp4.hex[0]
hex1[6] <= decoder_7seg:disp1.hex[6]
hex1[5] <= decoder_7seg:disp1.hex[5]
hex1[4] <= decoder_7seg:disp1.hex[4]
hex1[3] <= decoder_7seg:disp1.hex[3]
hex1[2] <= decoder_7seg:disp1.hex[2]
hex1[1] <= decoder_7seg:disp1.hex[1]
hex1[0] <= decoder_7seg:disp1.hex[0]
hex0[6] <= decoder_7seg:disp0.hex[6]
hex0[5] <= decoder_7seg:disp0.hex[5]
hex0[4] <= decoder_7seg:disp0.hex[4]
hex0[3] <= decoder_7seg:disp0.hex[3]
hex0[2] <= decoder_7seg:disp0.hex[2]
hex0[1] <= decoder_7seg:disp0.hex[1]
hex0[0] <= decoder_7seg:disp0.hex[0]


|Add_sub|ff_asyncrst_sign8bit:reg01
D[0] => Q[0]~reg0.DATAIN
D[1] => Q[1]~reg0.DATAIN
D[2] => Q[2]~reg0.DATAIN
D[3] => Q[3]~reg0.DATAIN
D[4] => Q[4]~reg0.DATAIN
D[5] => Q[5]~reg0.DATAIN
D[6] => Q[6]~reg0.DATAIN
D[7] => Q[7]~reg0.DATAIN
Clk => Q[0]~reg0.CLK
Clk => Q[1]~reg0.CLK
Clk => Q[2]~reg0.CLK
Clk => Q[3]~reg0.CLK
Clk => Q[4]~reg0.CLK
Clk => Q[5]~reg0.CLK
Clk => Q[6]~reg0.CLK
Clk => Q[7]~reg0.CLK
Resetn => Q[0]~reg0.ACLR
Resetn => Q[1]~reg0.ACLR
Resetn => Q[2]~reg0.ACLR
Resetn => Q[3]~reg0.ACLR
Resetn => Q[4]~reg0.ACLR
Resetn => Q[5]~reg0.ACLR
Resetn => Q[6]~reg0.ACLR
Resetn => Q[7]~reg0.ACLR
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|ff_asyncrst_sign8bit:reg02
D[0] => Q[0]~reg0.DATAIN
D[1] => Q[1]~reg0.DATAIN
D[2] => Q[2]~reg0.DATAIN
D[3] => Q[3]~reg0.DATAIN
D[4] => Q[4]~reg0.DATAIN
D[5] => Q[5]~reg0.DATAIN
D[6] => Q[6]~reg0.DATAIN
D[7] => Q[7]~reg0.DATAIN
Clk => Q[0]~reg0.CLK
Clk => Q[1]~reg0.CLK
Clk => Q[2]~reg0.CLK
Clk => Q[3]~reg0.CLK
Clk => Q[4]~reg0.CLK
Clk => Q[5]~reg0.CLK
Clk => Q[6]~reg0.CLK
Clk => Q[7]~reg0.CLK
Resetn => Q[0]~reg0.ACLR
Resetn => Q[1]~reg0.ACLR
Resetn => Q[2]~reg0.ACLR
Resetn => Q[3]~reg0.ACLR
Resetn => Q[4]~reg0.ACLR
Resetn => Q[5]~reg0.ACLR
Resetn => Q[6]~reg0.ACLR
Resetn => Q[7]~reg0.ACLR
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|full_adder_8bit:adder
val01[0] => v_sum.IN1
val01[0] => carry.IN0
val01[0] => carry.IN1
val01[1] => v_sum.IN1
val01[1] => carry.IN1
val01[1] => carry.IN1
val01[2] => v_sum.IN1
val01[2] => carry.IN1
val01[2] => carry.IN1
val01[3] => v_sum.IN1
val01[3] => carry.IN1
val01[3] => carry.IN1
val01[4] => v_sum.IN1
val01[4] => carry.IN1
val01[4] => carry.IN1
val01[5] => v_sum.IN1
val01[5] => carry.IN1
val01[5] => carry.IN1
val01[6] => v_sum.IN1
val01[6] => carry.IN1
val01[6] => carry.IN1
val01[7] => v_sum.IN1
val01[7] => process_0.IN1
val01[7] => process_0.IN1
val02[0] => v_val02[0].DATAB
val02[0] => v_val02[0].DATAA
val02[1] => v_val02[1].DATAB
val02[1] => v_val02[1].DATAA
val02[2] => v_val02[2].DATAB
val02[2] => v_val02[2].DATAA
val02[3] => v_val02[3].DATAB
val02[3] => v_val02[3].DATAA
val02[4] => v_val02[4].DATAB
val02[4] => v_val02[4].DATAA
val02[5] => v_val02[5].DATAB
val02[5] => v_val02[5].DATAA
val02[6] => v_val02[6].DATAB
val02[6] => v_val02[6].DATAA
val02[7] => v_val02[7].DATAB
val02[7] => v_val02[7].DATAA
sum_subn => v_val02[7].OUTPUTSELECT
sum_subn => v_val02[6].OUTPUTSELECT
sum_subn => v_val02[5].OUTPUTSELECT
sum_subn => v_val02[4].OUTPUTSELECT
sum_subn => v_val02[3].OUTPUTSELECT
sum_subn => v_val02[2].OUTPUTSELECT
sum_subn => v_val02[1].OUTPUTSELECT
sum_subn => v_val02[0].OUTPUTSELECT
sum_subn => v_sum.IN1
sum_subn => carry.IN1
sum_subn => carry.IN1
sum[0] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[1] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[2] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[3] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[4] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[5] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[6] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
sum[7] <= v_sum.DB_MAX_OUTPUT_PORT_TYPE
c_o <= process_0.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|ff_asyncrst_sign8bit:reg03
D[0] => Q[0]~reg0.DATAIN
D[1] => Q[1]~reg0.DATAIN
D[2] => Q[2]~reg0.DATAIN
D[3] => Q[3]~reg0.DATAIN
D[4] => Q[4]~reg0.DATAIN
D[5] => Q[5]~reg0.DATAIN
D[6] => Q[6]~reg0.DATAIN
D[7] => Q[7]~reg0.DATAIN
Clk => Q[0]~reg0.CLK
Clk => Q[1]~reg0.CLK
Clk => Q[2]~reg0.CLK
Clk => Q[3]~reg0.CLK
Clk => Q[4]~reg0.CLK
Clk => Q[5]~reg0.CLK
Clk => Q[6]~reg0.CLK
Clk => Q[7]~reg0.CLK
Resetn => Q[0]~reg0.ACLR
Resetn => Q[1]~reg0.ACLR
Resetn => Q[2]~reg0.ACLR
Resetn => Q[3]~reg0.ACLR
Resetn => Q[4]~reg0.ACLR
Resetn => Q[5]~reg0.ACLR
Resetn => Q[6]~reg0.ACLR
Resetn => Q[7]~reg0.ACLR
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|ff_asyncrst_sign1bit:reg04
D => Q~reg0.DATAIN
Clk => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|decoder_7seg:disp7
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|decoder_7seg:disp6
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|decoder_7seg:disp5
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|decoder_7seg:disp4
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|decoder_7seg:disp1
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|Add_sub|decoder_7seg:disp0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN1
x[0] => hex.IN1
x[0] => hex.IN0
x[0] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN0
x[1] => hex.IN1
x[1] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[2] => hex.IN0
x[2] => hex.IN1
x[2] => hex.IN0
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
x[3] => hex.IN1
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE


